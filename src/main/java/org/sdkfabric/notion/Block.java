/**
 * Block automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

package org.sdkfabric.notion;

import com.fasterxml.jackson.annotation.*;

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type")
@JsonSubTypes({
    @JsonSubTypes.Type(value = BlockBookmark.class, name = "bookmark"),
    @JsonSubTypes.Type(value = BlockBreadcrumb.class, name = "breadcrumb"),
    @JsonSubTypes.Type(value = BlockBulletedListItem.class, name = "bulleted_list_item"),
    @JsonSubTypes.Type(value = BlockCallout.class, name = "callout"),
    @JsonSubTypes.Type(value = BlockChildDatabase.class, name = "child_database"),
    @JsonSubTypes.Type(value = BlockChildPage.class, name = "child_page"),
    @JsonSubTypes.Type(value = BlockCode.class, name = "code"),
    @JsonSubTypes.Type(value = BlockDivider.class, name = "divider"),
    @JsonSubTypes.Type(value = BlockEmbed.class, name = "embed"),
    @JsonSubTypes.Type(value = BlockEquation.class, name = "equation"),
    @JsonSubTypes.Type(value = BlockFile.class, name = "file"),
    @JsonSubTypes.Type(value = BlockHeading.class, name = "heading_1"),
    @JsonSubTypes.Type(value = BlockHeading.class, name = "heading_2"),
    @JsonSubTypes.Type(value = BlockHeading.class, name = "heading_3"),
    @JsonSubTypes.Type(value = BlockImage.class, name = "image"),
    @JsonSubTypes.Type(value = BlockNumberedListItem.class, name = "numbered_list_item"),
    @JsonSubTypes.Type(value = BlockParagraph.class, name = "paragraph"),
    @JsonSubTypes.Type(value = BlockPDF.class, name = "pdf"),
    @JsonSubTypes.Type(value = BlockQuote.class, name = "quote"),
})
public abstract class Block {
    private String object;
    private String id;
    private ParentId parent;
    private String type;
    private java.time.LocalDateTime createdTime;
    private User createdBy;
    private java.time.LocalDateTime lastEditedTime;
    private User lastEditedBy;
    @JsonPropertyDescription("The archived status of the block")
    private Boolean archived;
    @JsonPropertyDescription("Whether the block has been deleted")
    private Boolean inTrash;
    @JsonPropertyDescription("Whether or not the block has children blocks nested within it")
    private Boolean hasChildren;

    @JsonSetter("object")
    public void setObject(String object) {
        this.object = object;
    }

    @JsonGetter("object")
    public String getObject() {
        return this.object;
    }

    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    @JsonGetter("id")
    public String getId() {
        return this.id;
    }

    @JsonSetter("parent")
    public void setParent(ParentId parent) {
        this.parent = parent;
    }

    @JsonGetter("parent")
    public ParentId getParent() {
        return this.parent;
    }

    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    @JsonGetter("type")
    public String getType() {
        return this.type;
    }

    @JsonSetter("created_time")
    public void setCreatedTime(java.time.LocalDateTime createdTime) {
        this.createdTime = createdTime;
    }

    @JsonGetter("created_time")
    public java.time.LocalDateTime getCreatedTime() {
        return this.createdTime;
    }

    @JsonSetter("created_by")
    public void setCreatedBy(User createdBy) {
        this.createdBy = createdBy;
    }

    @JsonGetter("created_by")
    public User getCreatedBy() {
        return this.createdBy;
    }

    @JsonSetter("last_edited_time")
    public void setLastEditedTime(java.time.LocalDateTime lastEditedTime) {
        this.lastEditedTime = lastEditedTime;
    }

    @JsonGetter("last_edited_time")
    public java.time.LocalDateTime getLastEditedTime() {
        return this.lastEditedTime;
    }

    @JsonSetter("last_edited_by")
    public void setLastEditedBy(User lastEditedBy) {
        this.lastEditedBy = lastEditedBy;
    }

    @JsonGetter("last_edited_by")
    public User getLastEditedBy() {
        return this.lastEditedBy;
    }

    @JsonSetter("archived")
    public void setArchived(Boolean archived) {
        this.archived = archived;
    }

    @JsonGetter("archived")
    public Boolean getArchived() {
        return this.archived;
    }

    @JsonSetter("in_trash")
    public void setInTrash(Boolean inTrash) {
        this.inTrash = inTrash;
    }

    @JsonGetter("in_trash")
    public Boolean getInTrash() {
        return this.inTrash;
    }

    @JsonSetter("has_children")
    public void setHasChildren(Boolean hasChildren) {
        this.hasChildren = hasChildren;
    }

    @JsonGetter("has_children")
    public Boolean getHasChildren() {
        return this.hasChildren;
    }
}

